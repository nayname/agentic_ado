{
	"description": {
		"ado_type": "timelock",
		"version": "2.1.0",
		"description": "A smart contract that holds native coins until a condition is satisfied: either a time expiration or a minimum fund threshold.",
		"InstantiateMsg": {
			"kernel_address": "String - Required. Address of the kernel contract for AMP messaging.",
			"owner": "Option<String> - Optional. Address of the owner, defaults to sender."
		},
		"ExecuteMsg": {
			"hold_funds": {
				"recipient": "Option<Recipient> - Optional. Address of the recipient, defaults to sender.",
				"condition": "Option<EscrowCondition> - Optional. Condition to unlock the escrow."
			},
			"release_funds": {
				"recipient_addr": "Option<String> - Optional. Address to release funds to, defaults to sender.",
				"start_after": "Option<String> - Optional. Pagination start point.",
				"limit": "Option<u32> - Optional. Limit of timelocks to release (default: 10, max: 30)."
			},
			"release_specific_funds": {
				"owner": "String - Required. Address whose funds will be released.",
				"recipient_addr": "Option<String> - Optional. Address to receive funds, defaults to sender."
			}
		},
		"QueryMsg": {
			"get_locked_funds": {
				"owner": "String - Required. Address of the owner.",
				"recipient": "String - Required. Address of the recipient."
			},
			"get_locked_funds_for_recipient": {
				"recipient": "String - Required. Address of the recipient.",
				"start_after": "Option<String> - Optional. Pagination start point.",
				"limit": "Option<u32> - Optional. Max records (default: 10, max: 30)."
			}
		},
		"GetLockedFundsResponse": {
			"funds": "Option<Escrow> - Escrow data with coins, condition, and recipient."
		},
		"GetLockedFundsForRecipientResponse": {
			"funds": "Vec<Escrow> - List of escrow data for a recipient."
		},
		"Escrow": {
			"coins": "Vec<Coin> - Held funds.",
			"condition": "Option<EscrowCondition> - Unlocking condition.",
			"recipient": "Recipient - Recipient of the funds."
		},
		"EscrowCondition": {
			"Expiration": "Expiry - Unlock based on time in nanoseconds.",
			"MinimumFunds": "Vec<Coin> - Unlock based on deposited amount."
		}
	},
	"schema": {
		"InstantiateMsg": {
			"kernel_address": "andr1kerneladdress123...",
			"owner": "andr1owneraddress456..."
		},
		"ExecuteMsg": {
			"hold_funds": {
				"recipient": {
					"address": "andr1recipientaddress789..."
				},
				"condition": {
					"expiration": {
						"from_now": 360000000
					}
				}
			},
			"release_funds": {
				"recipient_addr": "andr1recipientaddress789...",
				"start_after": "andr1someaddress...",
				"limit": 15
			},
			"release_specific_funds": {
				"owner": "andr1owneraddress456...",
				"recipient_addr": "andr1recipientaddress789..."
			}
		},
		"QueryMsg": {
			"get_locked_funds": {
				"owner": "andr1owneraddress456...",
				"recipient": "andr1recipientaddress789..."
			},
			"get_locked_funds_for_recipient": {
				"recipient": "andr1recipientaddress789...",
				"start_after": "andr1someaddress...",
				"limit": 15
			}
		},
		"GetLockedFundsResponse": {
			"funds": {
				"coins": [
					{
						"amount": "1000",
						"denom": "uandr"
					}
				],
				"recipient": "andr1recipientaddress789...",
				"condition": {
					"expiration": {
						"at_height": 175849
					}
				}
			}
		},
		"GetLockedFundsForRecipientResponse": {
			"funds": [
				{
					"coins": [
						{
							"amount": "1000",
							"denom": "uandr"
						}
					],
					"recipient": {
						"addr": "andr1recipientaddress789..."
					},
					"condition": {
						"expiration": {
							"at_height": 13249238492
						}
					}
				}
			]
		}
	}
}