{
  "description": {
    "InstantiateMsg": {
      "name": "String - The name of the NFT collection.",
      "symbol": "String - The symbol of the NFT collection.",
      "minter": "String - The address allowed to mint NFTs.",
      "kernel_address": "String - Contract address of the kernel contract to be used for AMP messaging.",
      "owner": "Option<String> - Optional address to specify as the owner of the ADO being created."
    },
    "ExecuteMsg": {
      "mint": {
        "token_id": "String - Unique Id of the NFT.",
        "owner": "String - The address of the NFT owner.",
        "token_uri": "Option<String> - URI pointing to the NFT metadata.",
        "extension": {
          "publisher": "String - The entity to assign as the publisher of the NFT."
        }
      },
      "batch_mint": {
        "tokens": "Vec<MintMsg> - List of NFTs to mint."
      },
      "transfer_agreement": {
        "token_id": "String - The token Id of the NFT.",
        "agreement": {
          "amount": {
            "raw": {
              "denom": "String - Denomination of token.",
              "amount": "String - Amount for the purchase."
            }
          },
          "purchaser": "String - The address allowed to purchase the token."
        }
      },
      "transfer_nft": {
        "recipient": "String - The address to receive the NFT.",
        "token_id": "String - The token Id to transfer."
      },
      "send_nft": {
        "contract": "String - Receiving contract address.",
        "token_id": "String - The Id of the token.",
        "msg": "Binary - Message to be sent to the contract."
      },
      "burn": {
        "token_id": "String - The Id of the token to burn."
      },
      "archive": {
        "token_id": "String - The Id of the token to archive."
      },
      "approve": {
        "spender": "String - The address to be authorized.",
        "token_id": "String - The token Id.",
        "expires": "Option<Expiration> - Optional expiration for approval."
      },
      "revoke": {
        "spender": "String - Operator address.",
        "token_id": "String - Token Id for which privileges are revoked."
      },
      "approve_all": {
        "operator": "String - Address to authorize as operator.",
        "expires": "Option<Expiration> - Optional expiration for approval."
      },
      "revoke_all": {
        "operator": "String - Operator address to revoke."
      }
    },
    "QueryMsg": {
      "minter": "Query for current minter.",
      "owner_of": {
        "token_id": "String - Token Id.",
        "include_expired": "bool - Include expired owners."
      },
      "operator": {
        "owner": "String - NFT owner address.",
        "operator": "String - Operator address.",
        "include_expired": "Option<bool> - Include expired approvals."
      },
      "all_operators": {
        "owner": "String - Owner address.",
        "include_expired": "Option<bool> - Include expired approvals.",
        "start_after": "Option<String> - Pagination start point.",
        "limit": "Option<u32> - Result limit."
      },
      "num_tokens": "Query for number of minted tokens.",
      "nft_info": {
        "token_id": "String - Token Id."
      },
      "all_nft_info": {
        "token_id": "String - Token Id.",
        "include_expired": "Option<bool> - Include expired approvals."
      },
      "is_archived": {
        "token_id": "String - Token Id to check for archive status."
      },
      "transfer_agreement": {
        "token_id": "String - Token Id to check agreement for."
      },
      "tokens": {
        "owner": "String - Owner address.",
        "start_after": "Option<String> - Pagination start.",
        "limit": "Option<u32> - Limit number of tokens."
      },
      "all_tokens": {
        "start_after": "Option<String>",
        "limit": "Option<u32>"
      },
      "contract_info": "Get name and symbol of token collection.",
      "approval": {
        "token_id": "String - Token Id.",
        "spender": "String - Spender address.",
        "include_expired": "Option<bool>"
      },
      "approvals": {
        "token_id": "String - Token Id.",
        "include_expired": "Option<bool>"
      }
    }
  },
  "schema": {
    "InstantiateMsg": {
      "name": "Example Token",
      "symbol": "ET",
      "minter": "andr1...",
      "kernel_address": "andr1..."
    },
    "ExecuteMsg": {
      "mint": {
        "token_id": "1",
        "owner": "andr1...",
        "token_uri": "https://gateway.pinata.cloud/ipfs...",
        "extension": {
          "publisher": "Andromeda"
        }
      }
    },
    "QueryMsg": {
      "minter": {}
    }
  }
}