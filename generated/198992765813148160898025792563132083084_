To create the Crowdfund app based on the user's requirements, we'll define the schemas for the Crowdfund, CW721, and Splitter components. Here's how we could configure them:

1. **Crowdfund Component:** This component is responsible for managing the NFT sale to raise funds.

    ```json
    {
      "Crowdfund": {
        "kernel_address": "andr1kernel...",
        "owner": "andr1owner..."
      }
    }
    ```

    - `kernel_address`: Used for AMP messaging. Substitute with the actual address.
    - `owner`: Set to the address of the crowdfund creator or default to the message sender.

2. **CW721 Component:** This is the NFT minting module.

    ```json
    {
      "CW721": {
        "name": "MyProjectNFT",
        "symbol": "MPNFT",
        "minter": "andr1minter...",
        "minting_limit": 1000
      }
    }
    ```

    - `name`: The name for the NFT collection.
    - `symbol`: An abbreviated symbol for the NFTs.
    - `minter`: Address authorized to mint NFTs.
    - `minting_limit`: Defines the maximum number of NFTs to be minted.

3. **Splitter Component:** This handles the distribution of funds post-sale.

    ```json
    {
      "Splitter": {
        "recipients": [
          {
            "recipient": {
              "address": "andr1primary..."
            },
            "percent": "0.8"
          },
          {
            "recipient": {
              "address": "andr1secondary..."
            },
            "percent": "0.2"
          }
        ],
        "kernel_address": "andr1kernel...",
        "owner": "andr1owner..."
      }
    }
    ```

    - `recipients`: Two recipients with addresses and percentages (80% to primary, 20% to secondary).
    - `kernel_address`: Address for AMP messaging.
    - `owner`: Specified by the crowdfund creator or defaults to the sender.

Ensure to replace placeholder addresses like `andr1kernel...`, `andr1owner...`, `andr1minter...`, `andr1primary...`, and `andr1secondary...` with the appropriate actual addresses based on the specific deployment scenario.